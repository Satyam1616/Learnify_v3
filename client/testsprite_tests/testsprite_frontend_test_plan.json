[
  {
    "id": "TC001",
    "title": "Hero Section renders correctly on all devices",
    "description": "Verify the Hero Section displays the headline, description, and responsive CTA button correctly on mobile, tablet, and desktop browsers.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the home page on desktop browser"
      },
      {
        "type": "assertion",
        "description": "Check that the Hero Section headline is visible and properly styled"
      },
      {
        "type": "assertion",
        "description": "Verify the CTA button is visible, clickable, and responsive"
      },
      {
        "type": "action",
        "description": "Resize the browser window to tablet screen size"
      },
      {
        "type": "assertion",
        "description": "Ensure Hero Section content reflows correctly and CTA remains functional"
      },
      {
        "type": "action",
        "description": "Open home page on a mobile device or emulator"
      },
      {
        "type": "assertion",
        "description": "Verify Hero Section content is accessible and the CTA is accessible via touch"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Program Explorer dynamic views and lazy loading",
    "description": "Verify that Program Explorer supports switching between grid and list views, lazy loads new program data on scroll, and displays SEO optimized content.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Program Explorer page"
      },
      {
        "type": "assertion",
        "description": "Confirm default view is grid with multiple program cards visible"
      },
      {
        "type": "action",
        "description": "Switch to list view using the toggle control"
      },
      {
        "type": "assertion",
        "description": "Verify programs display in a vertical list layout"
      },
      {
        "type": "action",
        "description": "Scroll down to trigger lazy loading of additional programs"
      },
      {
        "type": "assertion",
        "description": "Ensure new program items load and appear without layout shifts"
      },
      {
        "type": "action",
        "description": "Inspect the page source or metadata for SEO optimized tags for visible programs"
      },
      {
        "type": "assertion",
        "description": "Verify program titles and descriptions are present in the metadata"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Mentor Showcase responsiveness and card behavior",
    "description": "Ensure mentor bio cards display avatars, roles, badges, and that the grid collapses responsively on smaller devices.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Mentor Showcase section"
      },
      {
        "type": "assertion",
        "description": "Verify each mentor card shows avatar image, role text, and badges"
      },
      {
        "type": "action",
        "description": "Resize browser window from desktop to tablet then to mobile size"
      },
      {
        "type": "assertion",
        "description": "Confirm mentor cards rearrange into a collapsing grid with no content overlap"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Why Choose Us animated cards accessibility and performance",
    "description": "Validate the Why Choose Us section animations perform smoothly and accessibility features such as ARIA labels and keyboard navigation are in place.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Why Choose Us section"
      },
      {
        "type": "assertion",
        "description": "Observe card animations triggered by scrolling or interaction and confirm smooth transitions"
      },
      {
        "type": "action",
        "description": "Attempt keyboard navigation focusing on each card"
      },
      {
        "type": "assertion",
        "description": "Verify all cards are reachable and ARIA labels describe each card properly"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Testimonials carousel navigation and submission",
    "description": "Verify testimonials carousel supports swipe and arrow navigation, authenticated review submission, profanity filtering, and duplicate prevention.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Testimonials section"
      },
      {
        "type": "assertion",
        "description": "Verify testimonials carousel can be navigated by arrow buttons and swipe gestures"
      },
      {
        "type": "action",
        "description": "Attempt to submit a testimonial while logged out"
      },
      {
        "type": "assertion",
        "description": "Confirm authentication prompt appears and submission is prevented"
      },
      {
        "type": "action",
        "description": "Log in as a valid user and submit a testimonial with clean text"
      },
      {
        "type": "assertion",
        "description": "Verify testimonial is accepted and appears in the carousel"
      },
      {
        "type": "action",
        "description": "Submit a testimonial containing profanity"
      },
      {
        "type": "assertion",
        "description": "Confirm profanity is filtered or submission is blocked with a user-friendly message"
      },
      {
        "type": "action",
        "description": "Submit a duplicate testimonial text"
      },
      {
        "type": "assertion",
        "description": "Verify duplicate submission is prevented and appropriate feedback is shown"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Contact and Inquiry form validations and spam protection",
    "description": "Check all contact and inquiry forms for multi-field validations, friendly error messages, and spam protection mechanisms via reCAPTCHA or honeypot.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Contact or Inquiry form"
      },
      {
        "type": "action",
        "description": "Attempt to submit with empty required fields"
      },
      {
        "type": "assertion",
        "description": "Verify form prevents submission and shows relevant validation error messages"
      },
      {
        "type": "action",
        "description": "Fill form with invalid email format"
      },
      {
        "type": "assertion",
        "description": "Check for email format validation message"
      },
      {
        "type": "action",
        "description": "Fill valid form data and bypass spam protection inputs (e.g., fill honeypot field)"
      },
      {
        "type": "assertion",
        "description": "Confirm form submission is blocked or flagged as spam"
      },
      {
        "type": "action",
        "description": "Submit valid form with reCAPTCHA completed successfully"
      },
      {
        "type": "assertion",
        "description": "Check form submission succeeds with success confirmation"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "User Authentication with OAuth and Email/Password flows",
    "description": "Test OAuth sign-in with Google, email/password login with JWT handling, including token refresh and fallback.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Attempt OAuth sign-in with valid Google account"
      },
      {
        "type": "assertion",
        "description": "Verify user is authenticated and redirected to user dashboard"
      },
      {
        "type": "action",
        "description": "Log out and attempt login with valid email and password"
      },
      {
        "type": "assertion",
        "description": "Confirm successful login and JWT token is received"
      },
      {
        "type": "action",
        "description": "Simulate token expiry and verify automatic refresh without user disruption"
      },
      {
        "type": "assertion",
        "description": "Ensure user session remains active and no crashes occur"
      },
      {
        "type": "action",
        "description": "Attempt login with invalid credentials"
      },
      {
        "type": "assertion",
        "description": "Confirm login fails with proper error message and no token is issued"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Responsive Header and Navigation functionality",
    "description": "Verify header navigation links, hamburger menu on mobile, and responsive footer rendering social links and newsletter form.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load any main page on desktop"
      },
      {
        "type": "assertion",
        "description": "Verify header shows navigation links inline and all links are clickable"
      },
      {
        "type": "action",
        "description": "Resize viewport to mobile screen size"
      },
      {
        "type": "assertion",
        "description": "Check that header collapses navigation into hamburger menu"
      },
      {
        "type": "action",
        "description": "Click hamburger menu to expand navigation links"
      },
      {
        "type": "assertion",
        "description": "Confirm all navigation items are accessible and functional"
      },
      {
        "type": "action",
        "description": "Scroll to footer section"
      },
      {
        "type": "assertion",
        "description": "Verify social links are visible and clickable"
      },
      {
        "type": "assertion",
        "description": "Test newsletter subscription form with valid and invalid inputs for proper validation feedback"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Reusable UI components and custom hooks functionality",
    "description": "Validate UI components like buttons, dialogs, cards render correctly and custom hooks detect mobile and trigger toast notifications.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Render UI components library page or storybook"
      },
      {
        "type": "assertion",
        "description": "Verify buttons respond to clicks visually and invoke callbacks"
      },
      {
        "type": "action",
        "description": "Trigger dialog open and close sequences"
      },
      {
        "type": "assertion",
        "description": "Check dialogs open and close without UI glitches"
      },
      {
        "type": "action",
        "description": "Test card components display content and respond to hover/focus states"
      },
      {
        "type": "action",
        "description": "In test app environment, simulate different screen sizes to test useMobile hook state changes"
      },
      {
        "type": "assertion",
        "description": "Verify hook returns accurate mobile detection state"
      },
      {
        "type": "action",
        "description": "Trigger toast notifications programmatically"
      },
      {
        "type": "assertion",
        "description": "Confirm toasts appear and dismiss properly"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Performance optimizations and global error boundary",
    "description": "Ensure lazy loading of images and components works correctly, image fallbacks display on load failure, and global error boundary recovers gracefully from runtime errors.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate the site and scroll to lazily loaded content or images"
      },
      {
        "type": "assertion",
        "description": "Verify content loads upon nearing viewport with minimal layout shifts"
      },
      {
        "type": "action",
        "description": "Simulate network failure or image load error for a lazy loaded image"
      },
      {
        "type": "assertion",
        "description": "Confirm fallback image or placeholder is displayed"
      },
      {
        "type": "action",
        "description": "Trigger a runtime error inside a React component (e.g., throw error in test environment)"
      },
      {
        "type": "assertion",
        "description": "Verify global error boundary catches the error and displays fallback UI without crashing the entire app"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Accessibility compliance across UI",
    "description": "Test that pages and components meet WCAG 2.1 accessibility guidelines including keyboard navigation, ARIA labels, and readable content structure.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate through main UI components using only keyboard (tab, shift+tab, enter, space)"
      },
      {
        "type": "assertion",
        "description": "Confirm all interactive elements are reachable in a logical tab order"
      },
      {
        "type": "action",
        "description": "Use screen reader to navigate pages and components"
      },
      {
        "type": "assertion",
        "description": "Verify ARIA attributes are present and descriptive for complex components such as modals, carousels, and forms"
      },
      {
        "type": "action",
        "description": "Check color contrast and font size readability using accessibility tools on all text content"
      },
      {
        "type": "assertion",
        "description": "Confirm the UI meets minimum contrast ratios and text is readable"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Edge case handling for poor connectivity and slow devices",
    "description": "Verify the platform handles slow network and device performance gracefully using placeholders, loaders, and non-blocking UI.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate slow network conditions (e.g., throttling network speed)"
      },
      {
        "type": "assertion",
        "description": "Check that loading indicators or skeleton UI appear for lazy loaded content"
      },
      {
        "type": "action",
        "description": "Simulate slow device performance by throttling CPU in browser"
      },
      {
        "type": "assertion",
        "description": "Verify animations and UI transitions do not freeze or cause crashes"
      },
      {
        "type": "action",
        "description": "Attempt to navigate and interact with key components such as Program Explorer and forms"
      },
      {
        "type": "assertion",
        "description": "Confirm UI remains responsive and users can complete actions without major delays"
      }
    ]
  }
]
